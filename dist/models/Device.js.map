{"version":3,"sources":["../src/models/Device.ts"],"names":[],"mappings":"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","file":"Device.js","sourcesContent":["import * as DataTypes from 'sequelize';\nimport { db } from './../db';\nimport { Message } from './Message';\nimport { Subscription } from './Subscription';\nimport { Topic } from './Topic';\n\nexport const Device = db.define('device', {\n  id: {\n    type: DataTypes.INTEGER(10).UNSIGNED,\n    allowNull: false,\n    primaryKey: true,\n    autoIncrement: true\n  },\n  address: {\n    type: DataTypes.INTEGER(10).UNSIGNED,\n    allowNull: false\n  },\n  clientId: { // MQTT-SN Client ID\n    type: DataTypes.STRING,\n    allowNull: true\n  },\n  connected: {\n    type: DataTypes.BOOLEAN,\n    allowNull: false,\n    defaultValue: false\n  },\n  state: {\n    type: DataTypes.ENUM('active', 'asleep', 'lost', 'awake', 'disconnected'),\n    allowNull: false,\n    defaultValue: 'disconnected'\n  },\n  waitingPingres: {\n    type: DataTypes.BOOLEAN,\n    allowNull: false,\n    defaultValue: false\n  },\n  lqi: {\n    type: DataTypes.INTEGER(10).UNSIGNED,\n    allowNull: true\n  },\n  rssi: {\n    type: DataTypes.INTEGER(10).UNSIGNED,\n    allowNull: true\n  },\n  duration: {\n    type: DataTypes.INTEGER(10).UNSIGNED,\n    allowNull: false\n  },\n  lastSeen: {\n    type: DataTypes.DATE,\n    allowNull: true\n  },\n  willTopic: {\n    type: DataTypes.STRING,\n    allowNull: true\n  },\n  willMessage: {\n    type: DataTypes.STRING,\n    allowNull: true\n  },\n  willQoS: {\n    type: DataTypes.INTEGER,\n    allowNull: true\n  },\n  willRetain: {\n    type: DataTypes.BOOLEAN,\n    allowNull: true\n  }\n}, {\n  classMethods: {\n    getAssociations: () => {\n      return {     \n        topics: {\n          type: 'hasMany',\n          model: Topic,\n          as: 'topics',\n          constraints: false\n        },\n        subscriptions: {\n          type: 'hasMany',\n          model: Subscription,\n          as: 'subscriptions',\n          constraints: false\n        },\n        messages: {\n          type: 'hasMany',\n          model: Message,\n          as: 'messages',\n          constraints: false\n        }\n      }\n    }\n  },\n  instanceMethods: {\n  },\n  hooks: {\n    beforeBulkCreate(items: Array<any>, options: any, fn: Function) {\n      options.individualHooks = true;\n      fn();\n    },\n    // beforeCreate(device: any, options: any, fn: Function) {\n    //   Promise.all([device.generateUdid(), device.generateToken()])\n    //     .then(() => {\n    //       fn();\n    //     })\n    //     .catch(err => {\n    //       fn(err);\n    //     });\n    // },\n    beforeBulkDestroy(options: any, fn: Function) {\n      options.individualHooks = true;\n      fn();\n    },\n    beforeDestroy: function(device: any) {\n      return Promise.all([\n          Topic.destroy({ where: { deviceId: device.id } }),\n          Subscription.destroy({ where: { deviceId: device.id } }),\n          Message.destroy({ where: { deviceId: device.id } })\n        ]);\n    }\n  }\n});"],"sourceRoot":"/Users/rod/workshop/aquila-gateway/src"}