{"version":3,"sources":["../src/CrcUtils.ts"],"names":[],"mappings":";AAEA,iBAAwB,IAAY;IAClC,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;IACvB,IAAI,CAAC,CAAC;IACN,IAAI,KAAK,GAAG,CAAC,CAAC;IAEd,OAAM,EAAE,IAAI,IAAI,CAAC,EACjB,CAAC;QACC,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;QAC1C,CAAC,GAAG,CAAC,CAAC;QACN,GACA,CAAC;YACC,EAAE,CAAA,CAAC,GAAG,GAAG,MAAM,CAAC,CAChB,CAAC;gBACC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC;YACrC,CAAC;YACD,IAAI,CACJ,CAAC;gBACC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;YAC5B,CAAC;QACH,CAAC,QAAO,EAAE,CAAC,EAAE;IACf,CAAC;IAED,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC;AACtB,CAAC;AAxBD,0BAwBC;AAAA,CAAC;AAEF,kBAAyB,IAAY;IACnC,IAAI,OAAe,EAAE,QAAgB,CAAC;IAEtC,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACvC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;IAE5C,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IAEnD,MAAM,CAAC,QAAQ,KAAK,OAAO,CAAC;AAC9B,CAAC;AATD,4BASC;AAAA,CAAC","file":"CrcUtils.js","sourcesContent":["\n// CRC algorithm based on Xmodem AVR code\nexport function calcCrc(data: Buffer): number {\n  let crc = 0;\n  let size = data.length;\n  let i;\n  let index = 0;\n\n  while(--size >= 0)\n  {\n    crc = (crc ^ data[index++] << 8) & 0xFFFF;\n    i = 8;\n    do\n    {\n      if(crc & 0x8000)\n      {\n        crc = (crc << 1 ^ 0x1021) & 0xFFFF;\n      }\n      else\n      {\n        crc = (crc << 1) & 0xFFFF;\n      }\n    } while(--i);\n  }\n\n  return crc & 0xFFFF;\n};\n\nexport function checkCrc(data: Buffer): boolean {\n  let dataCrc: number, calcdCrc: number;\n  // Getting crc from packet\n  dataCrc = (data[data.length - 1]) << 8;\n  dataCrc |= (data[data.length - 2]) & 0x00FF;\n  // Calculating crc\n  calcdCrc = calcCrc(data.slice(0, data.length - 2));\n  // Comparing\n  return calcdCrc === dataCrc;\n};\n"],"sourceRoot":"/Users/rod/workshop/blastbot-gateway/aquila-gateway/src"}