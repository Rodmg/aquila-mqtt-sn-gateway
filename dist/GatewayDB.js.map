{"version":3,"sources":["../src/GatewayDB.ts"],"names":[],"mappings":";AACA,+BAA+B;AAC/B,6BAA4B;AAC5B,yBAAwB;AAGxB;IAeE,YAAY,QAAgB;QAX5B,gBAAW,GAAW,CAAC,CAAC;QACxB,eAAU,GAAW,CAAC,CAAC;QAYrB,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;QACpC,EAAE,CAAA,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC3B,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACxB,CAAC;QAED,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED,UAAU;QACR,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;QACZ,CAAC,CAAC,CAAC;IACP,CAAC;IAED,OAAO;QACL,MAAM,CAAC,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM;YACvC,IAAI,CAAC,EAAE,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAChC,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,KAAK;gBACvB,QAAQ,EAAE,IAAI;gBACd,gBAAgB,EAAE,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;aAClD,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,OAAiB;QAgB3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAChD,EAAE,CAAA,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC;YAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAG1E,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM;YACtD,MAAM,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,MAAM,CAAC,cAAc,GAAG,KAAK,CAAC;YAC9B,MAAM,CAAC,KAAK,GAAG,cAAc,CAAC;YAC9B,MAAM,CAAC,MAAM,CAAC;QAChB,CAAC,CAAC,CAAC;QAOL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC9C,EAAE,CAAA,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC;YAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAMvE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;QAC5D,EAAE,CAAA,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC;YAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;QAW5F,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAClD,EAAE,CAAA,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC;YAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAE7E,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBACV,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,OAAO,CAAC,IAAI,EAAE,CAAC;YACjB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAGL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;QAExC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACvB,CAAC;IAGD,SAAS,CAAC,MAAM;QACd,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,EAAE,CAAA,CAAC,MAAM,CAAC,OAAO,KAAK,SAAS,CAAC;YAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC;QAC3F,IAAI,CAAC,EAAE,CAAA,CAAC,MAAM,CAAC,EAAE,KAAK,SAAS,CAAC;YAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;QACjF,EAAE,CAAA,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YAEV,EAAE,CAAA,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;gBAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;YACrB,CAAC;YACD,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC9B,CAAC;QACD,IAAI,CAAC,CAAC;YAEJ,EAAE,CAAA,CAAC,MAAM,CAAC,OAAO,KAAK,SAAS,CAAC;gBAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;YAChE,EAAE,CAAA,CAAC,MAAM,CAAC,EAAE,KAAK,SAAS,CAAC;gBAAC,KAAK,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;YACjD,EAAE,CAAA,CAAC,MAAM,CAAC,SAAS,KAAK,SAAS,CAAC;gBAAC,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;YACtE,EAAE,CAAA,CAAC,MAAM,CAAC,cAAc,KAAK,SAAS,CAAC;gBAAC,KAAK,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;YACrF,EAAE,CAAA,CAAC,MAAM,CAAC,GAAG,KAAK,SAAS,CAAC;gBAAC,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;YACpD,EAAE,CAAA,CAAC,MAAM,CAAC,IAAI,KAAK,SAAS,CAAC;gBAAC,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACvD,EAAE,CAAA,CAAC,MAAM,CAAC,QAAQ,KAAK,SAAS,CAAC;gBAAC,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YACnE,EAAE,CAAA,CAAC,MAAM,CAAC,SAAS,KAAK,SAAS,CAAC;gBAAC,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;YACtE,EAAE,CAAA,CAAC,MAAM,CAAC,WAAW,KAAK,SAAS,CAAC;gBAAC,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;YAC5E,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,eAAe,CAAC,IAAY;QAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QACpD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC7C,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,aAAa;QACX,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,oBAAoB;QAElB,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE;aACpC,UAAU,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE;aAC5B,GAAG,CAAC,CAAC,IAAI;YACN,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC,CAAC,CAAC;QAEP,IAAI,SAAS,GAAG,IAAI,CAAC;QAGrB,EAAE,CAAA,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC,CAAC,CAAC;QAGhC,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACrC,IAAI,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,IAAI,GAAG,CAAC,CAAC;YACb,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,CAAC;gBAAC,IAAI,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/B,EAAE,CAAA,CAAC,OAAO,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;gBAEtB,SAAS,GAAG,IAAI,GAAG,CAAC,CAAC;gBACrB,MAAM,CAAC,SAAS,CAAC;YACnB,CAAC;QACH,CAAC;QAED,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAExC,EAAE,CAAA,CAAC,SAAS,GAAG,IAAI,IAAI,SAAS,KAAK,IAAI,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QACvD,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAED,YAAY;QACV,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAGD,QAAQ,CAAC,iBAAsB,EAAE,KAAa,EAAE,OAAgB,EAAE,IAAa;QAC7E,EAAE,CAAA,CAAC,OAAM,CAAC,IAAI,CAAC,KAAK,WAAW,IAAI,IAAI,KAAK,IAAK,CAAC;YAAC,IAAI,GAAG,QAAQ,CAAC;QAEnE,EAAE,CAAA,CAAC,iBAAiB,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC;YACtC,EAAE,CAAA,CAAC,iBAAiB,CAAC,OAAO,KAAK,SAAS,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YACzD,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;YAC1D,EAAE,CAAA,CAAC,GAAG,CAAC;gBAAC,iBAAiB,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;YACtC,EAAE,CAAA,CAAC,iBAAiB,CAAC,EAAE,IAAI,IAAI,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;QAChD,CAAC;QAED,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,iBAAiB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;QAEjG,EAAE,CAAA,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,EAAE,CAAA,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACZ,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC;gBAC1B,IAAI,CAAC,UAAU,EAAE,CAAC;YACpB,CAAC;YACD,KAAK,GAAG;gBACN,MAAM,EAAE,iBAAiB,CAAC,EAAE;gBAC5B,IAAI,EAAE,KAAK;gBACX,EAAE,EAAE,OAAO;gBACX,IAAI,EAAE,IAAI;aACX,CAAA;YACD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,KAAK,CAAC,MAAM,GAAG,iBAAiB,CAAC,EAAE,CAAC;YACpC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;YACnB,KAAK,CAAC,EAAE,GAAG,OAAO,CAAC;YACnB,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAGD,QAAQ,CAAC,iBAAsB,EAAE,QAAa;QAC5C,EAAE,CAAA,CAAC,iBAAiB,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC;YACtC,EAAE,CAAA,CAAC,iBAAiB,CAAC,OAAO,KAAK,SAAS,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YACzD,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;YAC1D,EAAE,CAAA,CAAC,GAAG,CAAC;gBAAC,iBAAiB,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;YACtC,EAAE,CAAA,CAAC,iBAAiB,CAAC,EAAE,IAAI,IAAI,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;QAChD,CAAC;QAED,IAAI,KAAK,GAAQ,EAAE,MAAM,EAAE,CAAE,EAAC,MAAM,EAAE,iBAAiB,CAAC,EAAE,EAAC,CAAE,EAAE,CAAC;QAChE,EAAE,CAAA,CAAC,QAAQ,CAAC,EAAE,KAAK,SAAS,CAAC;YAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;QACnE,EAAE,CAAA,CAAC,QAAQ,CAAC,IAAI,KAAK,SAAS,CAAC;YAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;QAEzE,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACvC,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,mBAAmB,CAAC,iBAAsB;QACxC,EAAE,CAAA,CAAC,iBAAiB,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC;YACtC,EAAE,CAAA,CAAC,iBAAiB,CAAC,OAAO,KAAK,SAAS,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YACzD,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;YAC1D,EAAE,CAAA,CAAC,GAAG,CAAC;gBAAC,iBAAiB,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;YACtC,EAAE,CAAA,CAAC,iBAAiB,CAAC,EAAE,IAAI,IAAI,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;QAChD,CAAC;QAED,IAAI,KAAK,GAAG,EAAE,MAAM,EAAE,iBAAiB,CAAC,EAAE,EAAE,CAAC;QAC7C,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,mBAAmB;QACjB,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;QACtC,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,eAAe,CAAC,iBAAsB,EAAE,aAAkB,EAAE,GAAW;QACrE,EAAE,CAAA,CAAC,OAAM,CAAC,GAAG,CAAC,KAAK,WAAW,IAAI,GAAG,KAAK,IAAI,CAAC;YAAC,GAAG,GAAG,CAAC,CAAC;QAExD,EAAE,CAAA,CAAC,iBAAiB,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC;YACtC,EAAE,CAAA,CAAC,iBAAiB,CAAC,OAAO,KAAK,SAAS,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YACzD,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;YAC1D,EAAE,CAAA,CAAC,GAAG,CAAC;gBAAC,iBAAiB,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;YACtC,EAAE,CAAA,CAAC,iBAAiB,CAAC,EAAE,IAAI,IAAI,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;QAChD,CAAC;QAED,EAAE,CAAA,CAAC,aAAa,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;YACpC,EAAE,CAAA,CAAC,aAAa,CAAC,EAAE,KAAK,SAAS,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YAChD,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,iBAAiB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,aAAa,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC;QAClG,CAAC;QAED,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,CAAE,EAAC,MAAM,EAAE,iBAAiB,CAAC,EAAE,EAAC,EAAE,EAAC,KAAK,EAAE,aAAa,CAAC,IAAI,EAAC,CAAE,EAAE,CAAC,CAAC;QAEpH,EAAE,CAAA,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,KAAK,GAAG;gBACN,MAAM,EAAE,iBAAiB,CAAC,EAAE;gBAC5B,KAAK,EAAE,aAAa,CAAC,IAAI;gBACzB,GAAG,EAAE,GAAG;aACT,CAAA;YACD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC;QACD,IAAI,CAAC,CAAC;YACJ,KAAK,CAAC,MAAM,GAAG,iBAAiB,CAAC,EAAE,CAAC;YACpC,KAAK,CAAC,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC;YACjC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;YAChB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,yBAAyB,CAAC,SAAiB;QACzC,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC;QAC1D,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,0BAA0B,CAAC,iBAAsB;QAC/C,EAAE,CAAA,CAAC,iBAAiB,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC;YACtC,EAAE,CAAA,CAAC,iBAAiB,CAAC,OAAO,KAAK,SAAS,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YACzD,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;YAC1D,EAAE,CAAA,CAAC,GAAG,CAAC;gBAAC,iBAAiB,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;YACtC,EAAE,CAAA,CAAC,iBAAiB,CAAC,EAAE,IAAI,IAAI,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;QAChD,CAAC;QAED,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,iBAAiB,CAAC,EAAE,EAAE,CAAC,CAAC;QACtE,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,6BAA6B,CAAC,iBAAsB;QAClD,EAAE,CAAA,CAAC,iBAAiB,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC;YACtC,EAAE,CAAA,CAAC,iBAAiB,CAAC,OAAO,KAAK,SAAS,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YACzD,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;YAC1D,EAAE,CAAA,CAAC,GAAG,CAAC;gBAAC,iBAAiB,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;YACtC,EAAE,CAAA,CAAC,iBAAiB,CAAC,EAAE,IAAI,IAAI,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;QAChD,CAAC;QACD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAE,MAAM,EAAE,iBAAiB,CAAC,EAAE,EAAE,CAAC,CAAC;IACnE,CAAC;IAED,kBAAkB,CAAC,iBAAsB,EAAE,SAAiB,EAAE,SAAiB;QAC7E,EAAE,CAAA,CAAC,iBAAiB,CAAC,EAAE,KAAK,SAAS,CAAC,CAAC,CAAC;YACtC,EAAE,CAAA,CAAC,iBAAiB,CAAC,OAAO,KAAK,SAAS,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YACzD,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;YAC1D,EAAE,CAAA,CAAC,GAAG,CAAC;gBAAC,iBAAiB,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;YACtC,EAAE,CAAA,CAAC,iBAAiB,CAAC,EAAE,IAAI,IAAI,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;QAChD,CAAC;QAED,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAE,MAAM,EAAE,CAAG,EAAE,MAAM,EAAE,iBAAiB,CAAC,EAAE,EAAE;gBAChC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAE,EAAE,CAAC,CAAC;QACtE,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,WAAW,CAAC,OAAY;QACtB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IAED,qBAAqB,CAAC,QAAgB;QACpC,EAAE,CAAA,CAAC,OAAM,CAAC,QAAQ,CAAC,KAAK,WAAW,IAAI,QAAQ,KAAK,IAAI,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QACvE,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC;QACxD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC;QAChD,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;CAEF;AA3VD,8BA2VC","file":"GatewayDB.js","sourcesContent":["\nimport * as loki from 'lokijs';\nimport * as path from'path';\nimport * as fs from'fs';\nimport { DBInterface } from './interfaces';\n\nexport class GatewayDB implements DBInterface {\n\n  // Device and topic id pools\n  // Start from 1, protocol implementation in device interpreets 0 as null\n  deviceIndex: number = 1;\n  topicIndex: number = 1;\n  db: Loki;\n\n  devices: LokiCollection<any>;\n  topics: LokiCollection<any>;\n  subscriptions: LokiCollection<any>;\n  messages: LokiCollection<any>;\n\n  dataPath: string;\n\n  constructor(dataPath: string) {\n    // Create directory if not exists\n    let dataDir = path.dirname(dataPath)\n    if(!fs.existsSync(dataDir)) {\n      fs.mkdirSync(dataDir);\n    }\n\n    this.dataPath = dataPath;\n  }\n\n  destructor() {\n    this.db.close(() => {\n      });\n  }\n\n  connect(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.db = new loki(this.dataPath, {\n        autosave: true,\n        autosaveInterval: 60000,\n        autoload: true,\n        autoloadCallback: () => this.loadHandler(resolve)\n      });\n    }); \n  }\n\n  loadHandler(resolve: Function) {\n\n    // devices:\n    //  address: number\n    //  id: string\n    //  connected: bool\n    //  state: string ('active', 'asleep', 'lost', 'awake', 'disconnected') (for sleep support)\n    //  waitingPingres: bool\n    //  lqi: number\n    //  rssi: number\n    //  duration: connect ping timeout\n    //  lastSeen: last seen time\n    //  willTopic: string\n    //  willMessage: string\n    //  willQoS\n    //  willRetain\n    this.devices = this.db.getCollection('devices');\n    if(this.devices === null) this.devices = this.db.addCollection('devices');\n\n    // Mark all devices as disconnected and waitingPingres: false on startup\n    this.devices.findAndUpdate(() => { return true; }, (device) => {\n        device.connected = false;\n        device.waitingPingres = false;\n        device.state = 'disconnected';\n        return device;\n      });\n\n    // topics:\n    //  device: id\n    //  name: string\n    //  id: topicId\n    //  type: string ('short name', 'normal', 'pre-defined')\n    this.topics = this.db.getCollection('topics');\n    if(this.topics === null) this.topics = this.db.addCollection('topics');\n\n    // subscriptions:\n    //  device: id\n    //  topic: string   // Should connect with topic name in topics, if not preexistent, create\n    //  qos: qos number\n    this.subscriptions = this.db.getCollection('subscriptions');\n    if(this.subscriptions === null) this.subscriptions = this.db.addCollection('subscriptions');\n\n    // buffered messages\n    //  device: id\n    //  message: buffer\n    //  dup: bool\n    //  retain: bool\n    //  qos: number\n    //  topicId: number\n    //  msgId: number\n    //  topicIdType: string\n    this.messages = this.db.getCollection('messages');\n    if(this.messages === null) this.messages = this.db.addCollection('messages');\n\n    process.on('SIGINT', () => {\n        this.db.close(() => {\n            console.log(\"closed\");\n            process.exit();\n          });\n      });\n\n    // Updating indexes\n    this.deviceIndex = this.devices.maxId + 1;\n    this.topicIndex = this.topics.maxId + 1;\n\n    return resolve(null);\n  }\n\n  // update or create, use for adding wills etc.\n  setDevice(device) {\n    let found = null; \n    if(device.address !== undefined) found = this.devices.findOne({ address: device.address });\n    else if(device.id !== undefined) found = this.devices.findOne({ id: device.id });\n    if(!found) {\n      // create new\n      if(!device.id) {\n        device.id = this.deviceIndex;\n        this.deviceIndex++;\n      }\n      this.devices.insert(device);\n    }\n    else {\n      // update\n      if(device.address !== undefined) found.address = device.address;\n      if(device.id !== undefined) found.id = device.id;\n      if(device.connected !== undefined) found.connected = device.connected;\n      if(device.waitingPingres !== undefined) found.waitingPingres = device.waitingPingres;\n      if(device.lqi !== undefined) found.lqi = device.lqi;\n      if(device.rssi !== undefined) found.rssi = device.rssi;\n      if(device.duration !== undefined) found.duration = device.duration;\n      if(device.willTopic !== undefined) found.willTopic = device.willTopic;\n      if(device.willMessage !== undefined) found.willMessage = device.willMessage;\n      this.devices.update(found);\n    }\n    return found;\n  }\n\n  getDeviceByAddr(addr: number) {\n    let found = this.devices.findOne({ address: addr });\n    return found;\n  }\n\n  getDeviceById(id: number) {\n    let found = this.devices.findOne({ id: id });\n    return found;\n  }\n\n  getAllDevices() {\n    let found = this.devices.find();\n    return found;\n  }\n\n  getNextDeviceAddress() {\n    // Get all devices and order by address\n    let found = this.devices.chain().find()\n      .simplesort('address').data()\n      .map((item) => {\n          return item.address;\n        });\n\n    let nextIndex = null;\n\n    // Special case when there are no previous devices registered\n    if(found.length === 0) return 1;\n\n    // Find lower unused address\n    for(let i = 0; i < found.length; i++) {\n      let current = found[i];\n      let prev = 0;\n      if(i != 0) prev = found[i - 1];\n      if(current > prev + 1) {\n        // Found discontinuity, return next value inside discontinuity\n        nextIndex = prev + 1;\n        return nextIndex;\n      }\n    }\n    // If we reached here, there is no discontinuity, return next value if available\n    nextIndex = found[found.length - 1] + 1;\n    // Forbidden addresses, 0xF0 is the bridge\n    if(nextIndex > 0xFE || nextIndex === 0xF0) return null;\n    return nextIndex;\n  }\n\n  getAllTopics() {\n    let found = this.topics.find();\n    return found;\n  }\n\n  // accepts id or address as object {id: bla} or {address: bla}\n  setTopic(deviceIdOrAddress: any, topic: string, topicId?: number, type?: string) {\n    if(typeof(type) === 'undefined' || type === null ) type = 'normal';  // default\n\n    if(deviceIdOrAddress.id === undefined) {\n      if(deviceIdOrAddress.address === undefined) return false;\n      let dev = this.getDeviceByAddr(deviceIdOrAddress.address);\n      if(dev) deviceIdOrAddress.id = dev.id;\n      if(deviceIdOrAddress.id == null) return false;\n    }\n\n    let found = this.topics.findOne({ '$and': [{ device: deviceIdOrAddress.id }, { id: topicId }] });\n\n    if(!found) {\n      if(!topicId) {\n        topicId = this.topicIndex;\n        this.topicIndex++;\n      }\n      found = {\n        device: deviceIdOrAddress.id,\n        name: topic,\n        id: topicId,\n        type: type\n      }\n      this.topics.insert(found);\n    }\n    else {\n      found.device = deviceIdOrAddress.id;\n      found.name = topic;\n      found.id = topicId;\n      found.type = type;\n      this.topics.update(found);\n    }\n\n    return found;\n  }\n\n  // {id: } or {name:}\n  getTopic(deviceIdOrAddress: any, idOrName: any) {\n    if(deviceIdOrAddress.id === undefined) {\n      if(deviceIdOrAddress.address === undefined) return false;\n      let dev = this.getDeviceByAddr(deviceIdOrAddress.address);\n      if(dev) deviceIdOrAddress.id = dev.id;\n      if(deviceIdOrAddress.id == null) return false;\n    }\n\n    let query: any = { '$and': [ {device: deviceIdOrAddress.id} ] };\n    if(idOrName.id !== undefined) query.$and.push({ id: idOrName.id });\n    if(idOrName.name !== undefined) query.$and.push({ name: idOrName.name });\n\n    let found = this.topics.findOne(query);\n    return found;\n  }\n\n  getTopicsFromDevice(deviceIdOrAddress: any) {\n    if(deviceIdOrAddress.id === undefined) {\n      if(deviceIdOrAddress.address === undefined) return false;\n      let dev = this.getDeviceByAddr(deviceIdOrAddress.address);\n      if(dev) deviceIdOrAddress.id = dev.id;\n      if(deviceIdOrAddress.id == null) return false;\n    }\n\n    let query = { device: deviceIdOrAddress.id };\n    let found = this.topics.find(query);\n    return found;\n  }\n\n  getAllSubscriptions() {\n    let found = this.subscriptions.find();\n    return found;\n  }\n\n  setSubscription(deviceIdOrAddress: any, topicIdOrName: any, qos: number) {\n    if(typeof(qos) === 'undefined' || qos === null) qos = 0;\n\n    if(deviceIdOrAddress.id === undefined) {\n      if(deviceIdOrAddress.address === undefined) return false;\n      let dev = this.getDeviceByAddr(deviceIdOrAddress.address);\n      if(dev) deviceIdOrAddress.id = dev.id;\n      if(deviceIdOrAddress.id == null) return false;\n    }\n\n    if(topicIdOrName.name === undefined) {\n      if(topicIdOrName.id === undefined) return false;\n      topicIdOrName.name = this.getTopic({ id: deviceIdOrAddress.id }, { id: topicIdOrName.id }).name;\n    }\n\n    let found = this.subscriptions.findOne({ '$and': [ {device: deviceIdOrAddress.id}, {topic: topicIdOrName.name} ] });\n\n    if(!found) {\n      found = {\n        device: deviceIdOrAddress.id,\n        topic: topicIdOrName.name,\n        qos: qos\n      }\n      this.subscriptions.insert(found);\n    }\n    else {\n      found.device = deviceIdOrAddress.id;\n      found.topic = topicIdOrName.name;\n      found.qos = qos;\n      this.subscriptions.update(found);\n    }\n\n    return found;\n  }\n\n  getSubscriptionsFromTopic(topicName: string) {\n    let found = this.subscriptions.find({ topic: topicName });\n    return found;\n  }\n\n  getSubscriptionsFromDevice(deviceIdOrAddress: any) {\n    if(deviceIdOrAddress.id === undefined) {\n      if(deviceIdOrAddress.address === undefined) return false;\n      let dev = this.getDeviceByAddr(deviceIdOrAddress.address);\n      if(dev) deviceIdOrAddress.id = dev.id;\n      if(deviceIdOrAddress.id == null) return false;\n    }\n\n    let found = this.subscriptions.find({ device: deviceIdOrAddress.id });\n    return found;\n  }\n\n  removeSubscriptionsFromDevice(deviceIdOrAddress: any) {\n    if(deviceIdOrAddress.id === undefined) {\n      if(deviceIdOrAddress.address === undefined) return false;\n      let dev = this.getDeviceByAddr(deviceIdOrAddress.address);\n      if(dev) deviceIdOrAddress.id = dev.id;\n      if(deviceIdOrAddress.id == null) return false;\n    }\n    this.subscriptions.removeWhere({ device: deviceIdOrAddress.id });\n  }\n\n  removeSubscription(deviceIdOrAddress: any, topicName: string, topicType: string) {\n    if(deviceIdOrAddress.id === undefined) {\n      if(deviceIdOrAddress.address === undefined) return false;\n      let dev = this.getDeviceByAddr(deviceIdOrAddress.address);\n      if(dev) deviceIdOrAddress.id = dev.id;\n      if(deviceIdOrAddress.id == null) return false;\n    }\n\n    this.subscriptions.removeWhere({ '$and': [  { device: deviceIdOrAddress.id }, \n                                                { topic: topicName } ] });\n    return true;\n  }\n\n  pushMessage(message: any) {\n    this.messages.insert(message);\n  }\n\n  popMessagesFromDevice(deviceId: number) {\n    if(typeof(deviceId) === 'undefined' || deviceId === null) return false;\n    let messages = this.messages.find({ device: deviceId });\n    this.messages.removeWhere({ device: deviceId });\n    return messages;\n  }\n\n}\n"],"sourceRoot":"/Users/rod/workshop/blastbot-gateway/aquila-gateway/src"}