{"version":3,"sources":["../src/GatewayDB.ts"],"names":[],"mappings":"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","file":"GatewayDB.js","sourcesContent":["import * as loki from 'lokijs';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport { DBInterface } from './interfaces';\n\nexport class GatewayDB implements DBInterface {\n  // Device and topic id pools\n  // Start from 1, protocol implementation in device interpreets 0 as null\n  deviceIndex: number = 1;\n  topicIndex: number = 1;\n  db: Loki;\n\n  devices: Collection<any>;\n  topics: Collection<any>;\n  subscriptions: Collection<any>;\n  messages: Collection<any>;\n\n  dataPath: string;\n\n  _onSigint: any;\n\n  constructor(dataPath: string) {\n    // Create directory if not exists\n    let dataDir = path.dirname(dataPath);\n    if (!fs.existsSync(dataDir)) {\n      fs.mkdirSync(dataDir);\n    }\n\n    this._onSigint = () => {\n      this.db.close(() => {\n        console.log('closed');\n        process.exit();\n      });\n    };\n\n    this.dataPath = dataPath;\n  }\n\n  destructor() {\n    this.db.close(() => {});\n    process.removeListener('SIGINT', this._onSigint);\n  }\n\n  connect(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.db = new loki(this.dataPath, {\n        autosave: true,\n        autosaveInterval: 60000,\n        autoload: true,\n        autoloadCallback: () => this.loadHandler(resolve)\n      });\n    });\n  }\n\n  loadHandler(resolve: Function) {\n    // devices:\n    //  address: number\n    //  id: string\n    //  connected: bool\n    //  state: string ('active', 'asleep', 'lost', 'awake', 'disconnected') (for sleep support)\n    //  waitingPingres: bool\n    //  lqi: number\n    //  rssi: number\n    //  duration: connect ping timeout\n    //  lastSeen: last seen time\n    //  willTopic: string\n    //  willMessage: string\n    //  willQoS\n    //  willRetain\n    this.devices = this.db.getCollection('devices');\n    if (this.devices === null) this.devices = this.db.addCollection('devices');\n\n    // Mark all devices as disconnected and waitingPingres: false on startup\n    this.devices.findAndUpdate(\n      () => {\n        return true;\n      },\n      device => {\n        device.connected = false;\n        device.waitingPingres = false;\n        device.state = 'disconnected';\n        return device;\n      }\n    );\n\n    // topics:\n    //  device: id\n    //  name: string\n    //  id: topicId\n    //  type: string ('short name', 'normal', 'pre-defined')\n    this.topics = this.db.getCollection('topics');\n    if (this.topics === null) this.topics = this.db.addCollection('topics');\n\n    // subscriptions:\n    //  device: id\n    //  topic: string   // Should connect with topic name in topics, if not preexistent, create\n    //  qos: qos number\n    this.subscriptions = this.db.getCollection('subscriptions');\n    if (this.subscriptions === null) this.subscriptions = this.db.addCollection('subscriptions');\n\n    // buffered messages\n    //  device: id\n    //  message: buffer\n    //  dup: bool\n    //  retain: bool\n    //  qos: number\n    //  topicId: number\n    //  msgId: number\n    //  topicIdType: string\n    this.messages = this.db.getCollection('messages');\n    if (this.messages === null) this.messages = this.db.addCollection('messages');\n\n    process.on('SIGINT', this._onSigint);\n\n    // Updating indexes\n    this.deviceIndex = this.devices.maxId + 1;\n    this.topicIndex = this.topics.maxId + 1;\n\n    return resolve(null);\n  }\n\n  // update or create, use for adding wills etc.\n  setDevice(device): Promise<any> {\n    let found = null;\n    if (device.address !== undefined) found = this.devices.findOne({ address: device.address });\n    else if (device.id !== undefined) found = this.devices.findOne({ id: device.id });\n    if (!found) {\n      // create new\n      if (!device.id) {\n        device.id = this.deviceIndex;\n        this.deviceIndex++;\n      }\n      this.devices.insert(device);\n    } else {\n      // update\n      if (device.address !== undefined) found.address = device.address;\n      if (device.id !== undefined) found.id = device.id;\n      if (device.connected !== undefined) found.connected = device.connected;\n      if (device.waitingPingres !== undefined) found.waitingPingres = device.waitingPingres;\n      if (device.lqi !== undefined) found.lqi = device.lqi;\n      if (device.rssi !== undefined) found.rssi = device.rssi;\n      if (device.duration !== undefined) found.duration = device.duration;\n      if (device.willTopic !== undefined) found.willTopic = device.willTopic;\n      if (device.willMessage !== undefined) found.willMessage = device.willMessage;\n      this.devices.update(found);\n    }\n    return Promise.resolve(found);\n  }\n\n  removeDevice(device: any): Promise<boolean> {\n    let found = null;\n    if (device.address !== undefined) found = this.devices.findOne({ address: device.address });\n    else if (device.id !== undefined) found = this.devices.findOne({ id: device.id });\n\n    if (found == null) return Promise.resolve(false);\n\n    // Cleanup related models\n    this.topics.removeWhere({ device: found.id });\n    this.subscriptions.removeWhere({ device: found.id });\n    this.messages.removeWhere({ device: found.id });\n\n    this.devices.removeWhere({ id: found.id });\n\n    return Promise.resolve(true);\n  }\n\n  getDeviceByAddr(addr: number): Promise<any> {\n    let found = this.devices.findOne({ address: addr });\n    return Promise.resolve(found);\n  }\n\n  getDeviceById(id: number): Promise<any> {\n    let found = this.devices.findOne({ id: id });\n    return Promise.resolve(found);\n  }\n\n  getAllDevices(): Promise<any> {\n    let found = this.devices.find();\n    return Promise.resolve(found);\n  }\n\n  getNextDeviceAddress(): Promise<any> {\n    // Get all devices and order by address\n    let found = this.devices\n      .chain()\n      .find()\n      .simplesort('address')\n      .data()\n      .map(item => {\n        return item.address;\n      });\n\n    let nextIndex = null;\n\n    // Special case when there are no previous devices registered\n    if (found.length === 0) return Promise.resolve(1);\n\n    // Find lower unused address\n    for (let i = 0; i < found.length; i++) {\n      let current = found[i];\n      let prev = 0;\n      if (i != 0) prev = found[i - 1];\n      if (current > prev + 1) {\n        // Found discontinuity, return next value inside discontinuity\n        nextIndex = prev + 1;\n        return Promise.resolve(nextIndex);\n      }\n    }\n    // If we reached here, there is no discontinuity, return next value if available\n    nextIndex = found[found.length - 1] + 1;\n    // Forbidden addresses, 0xF0 is the bridge\n    if (nextIndex > 0xfe || nextIndex === 0xf0) return Promise.resolve(null);\n    return Promise.resolve(nextIndex);\n  }\n\n  getAllTopics(): Promise<any> {\n    let found = this.topics.find();\n    return Promise.resolve(found);\n  }\n\n  // accepts id or address as object {id: bla} or {address: bla}\n  async setTopic(\n    deviceIdOrAddress: any,\n    topic: string,\n    topicId?: number,\n    type?: string\n  ): Promise<any> {\n    if (typeof type === 'undefined' || type === null) type = 'normal'; // default\n\n    if (deviceIdOrAddress.id === undefined) {\n      if (deviceIdOrAddress.address === undefined) return Promise.resolve(false);\n      let dev = await this.getDeviceByAddr(deviceIdOrAddress.address);\n      if (dev) deviceIdOrAddress.id = dev.id;\n      if (deviceIdOrAddress.id == null) return Promise.resolve(false);\n    }\n\n    let found = this.topics.findOne({ $and: [{ device: deviceIdOrAddress.id }, { id: topicId }] });\n\n    if (!found) {\n      if (!topicId) {\n        topicId = this.topicIndex;\n        this.topicIndex++;\n      }\n      found = {\n        device: deviceIdOrAddress.id,\n        name: topic,\n        id: topicId,\n        type: type\n      };\n      this.topics.insert(found);\n    } else {\n      found.device = deviceIdOrAddress.id;\n      found.name = topic;\n      found.id = topicId;\n      found.type = type;\n      this.topics.update(found);\n    }\n\n    return Promise.resolve(found);\n  }\n\n  // {id: } or {name:}\n  async getTopic(deviceIdOrAddress: any, idOrName: any): Promise<any> {\n    if (deviceIdOrAddress.id === undefined) {\n      if (deviceIdOrAddress.address === undefined) return Promise.resolve(false);\n      let dev = await this.getDeviceByAddr(deviceIdOrAddress.address);\n      if (dev) deviceIdOrAddress.id = dev.id;\n      if (deviceIdOrAddress.id == null) return Promise.resolve(false);\n    }\n\n    let query: any = { $and: [{ device: deviceIdOrAddress.id }] };\n    if (idOrName.id !== undefined) query.$and.push({ id: idOrName.id });\n    if (idOrName.name !== undefined) query.$and.push({ name: idOrName.name });\n\n    let found = this.topics.findOne(query);\n    return Promise.resolve(found);\n  }\n\n  async getTopicsFromDevice(deviceIdOrAddress: any): Promise<any> {\n    if (deviceIdOrAddress.id === undefined) {\n      if (deviceIdOrAddress.address === undefined) return Promise.resolve(false);\n      let dev = await this.getDeviceByAddr(deviceIdOrAddress.address);\n      if (dev) deviceIdOrAddress.id = dev.id;\n      if (deviceIdOrAddress.id == null) return Promise.resolve(false);\n    }\n\n    let query = { device: deviceIdOrAddress.id };\n    let found = this.topics.find(query);\n    return Promise.resolve(found);\n  }\n\n  getAllSubscriptions(): Promise<any> {\n    let found = this.subscriptions.find();\n    return Promise.resolve(found);\n  }\n\n  async setSubscription(deviceIdOrAddress: any, topicIdOrName: any, qos: number): Promise<any> {\n    if (typeof qos === 'undefined' || qos === null) qos = 0;\n\n    if (deviceIdOrAddress.id === undefined) {\n      if (deviceIdOrAddress.address === undefined) return Promise.resolve(false);\n      let dev = await this.getDeviceByAddr(deviceIdOrAddress.address);\n      if (dev) deviceIdOrAddress.id = dev.id;\n      if (deviceIdOrAddress.id == null) return Promise.resolve(false);\n    }\n\n    if (topicIdOrName.name === undefined) {\n      if (topicIdOrName.id === undefined) return Promise.resolve(false);\n      let topic = await this.getTopic({ id: deviceIdOrAddress.id }, { id: topicIdOrName.id });\n      topicIdOrName.name = topic.name;\n    }\n\n    let found = this.subscriptions.findOne({\n      $and: [{ device: deviceIdOrAddress.id }, { topic: topicIdOrName.name }]\n    });\n\n    if (!found) {\n      found = {\n        device: deviceIdOrAddress.id,\n        topic: topicIdOrName.name,\n        qos: qos\n      };\n      this.subscriptions.insert(found);\n    } else {\n      found.device = deviceIdOrAddress.id;\n      found.topic = topicIdOrName.name;\n      found.qos = qos;\n      this.subscriptions.update(found);\n    }\n\n    return Promise.resolve(found);\n  }\n\n  getSubscriptionsFromTopic(topicName: string): Promise<any> {\n    let found = this.subscriptions.find({ topic: topicName });\n    return Promise.resolve(found);\n  }\n\n  async getSubscriptionsFromDevice(deviceIdOrAddress: any): Promise<any> {\n    if (deviceIdOrAddress.id === undefined) {\n      if (deviceIdOrAddress.address === undefined) return Promise.resolve(false);\n      let dev = await this.getDeviceByAddr(deviceIdOrAddress.address);\n      if (dev) deviceIdOrAddress.id = dev.id;\n      if (deviceIdOrAddress.id == null) return Promise.resolve(false);\n    }\n\n    let found = this.subscriptions.find({ device: deviceIdOrAddress.id });\n    return Promise.resolve(found);\n  }\n\n  async removeSubscriptionsFromDevice(deviceIdOrAddress: any): Promise<any> {\n    if (deviceIdOrAddress.id === undefined) {\n      if (deviceIdOrAddress.address === undefined) return Promise.resolve(false);\n      let dev = await this.getDeviceByAddr(deviceIdOrAddress.address);\n      if (dev) deviceIdOrAddress.id = dev.id;\n      if (deviceIdOrAddress.id == null) return Promise.resolve(false);\n    }\n    this.subscriptions.removeWhere({ device: deviceIdOrAddress.id });\n    return Promise.resolve(true);\n  }\n\n  async removeSubscription(\n    deviceIdOrAddress: any,\n    topicName: string,\n    topicType: string\n  ): Promise<any> {\n    if (deviceIdOrAddress.id === undefined) {\n      if (deviceIdOrAddress.address === undefined) return Promise.resolve(false);\n      let dev = await this.getDeviceByAddr(deviceIdOrAddress.address);\n      if (dev) deviceIdOrAddress.id = dev.id;\n      if (deviceIdOrAddress.id == null) return Promise.resolve(false);\n    }\n\n    this.subscriptions.removeWhere({\n      $and: [{ device: deviceIdOrAddress.id }, { topic: topicName }]\n    });\n    return Promise.resolve(true);\n  }\n\n  pushMessage(message: any): Promise<any> {\n    this.messages.insert(message);\n    return Promise.resolve(true);\n  }\n\n  popMessagesFromDevice(deviceId: number): Promise<any> {\n    if (typeof deviceId === 'undefined' || deviceId === null) return Promise.resolve(false);\n    let messages = this.messages.find({ device: deviceId });\n    this.messages.removeWhere({ device: deviceId });\n    return Promise.resolve(messages);\n  }\n}\n"],"sourceRoot":"/Users/rod/workshop/aquila-gateway/src"}