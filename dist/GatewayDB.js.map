{"version":3,"sources":["../src/GatewayDB.ts"],"names":[],"mappings":"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","file":"GatewayDB.js","sourcesContent":["\nimport * as path from'path';\nimport * as fs from'fs';\nimport { DBInterface } from './interfaces';\nimport { Device } from './models/Device';\nimport { Message } from './models/Message';\nimport { Subscription } from './models/Subscription';\nimport { Topic } from './models/Topic';\nimport { log } from './Logger';\nimport * as _ from 'lodash';\n\nimport { setupDB } from './db';\n\nexport class GatewayDB implements DBInterface {\n\n  dataPath: string;\n\n  constructor(dataPath: string) {\n    // Create directory if not exists\n    let dataDir = path.dirname(dataPath)\n    if(!fs.existsSync(dataDir)) {\n      fs.mkdirSync(dataDir);\n    }\n\n    this.dataPath = dataPath;\n  }\n\n  destructor() {\n\n  }\n\n  connect(): Promise<void> {\n    return setupDB()\n      .then(() => {\n        // Mark all devices as disconnected and waitingPingres: false on startup\n        return Device.update({\n          connected: false,\n          waitingPingres: false,\n          state: 'disconnected'\n        }, {\n          where: { connected: true }\n        });\n      });\n  }\n\n  // update or create, use for adding wills etc.\n  setDevice(device): Promise<any> {\n    return Promise.resolve(\n      Device.findOne({ where: { $or: [ { address: device.address }, { id: device.id } ] } })\n      .then((result) => {\n        // Create new if not found\n        if(!result) return Device.create(device);\n        // else update\n        if(device.dataValues != null) device = device.dataValues; // Support instance or object only\n        return result.update(device);\n      })\n    );\n  }\n\n  getDeviceByAddr(addr: number): Promise<any> {\n    return Promise.resolve(Device.findOne({ where: { address: addr } }));\n  }\n\n  getDeviceById(id: number): Promise<any> {\n    return Promise.resolve(Device.findOne({ where: { id: id } }));\n  }\n\n  getAllDevices(): Promise<any> {\n    return Promise.resolve(Device.findAll());\n  }\n\n  getNextDeviceAddress(): Promise<any> {\n    return Promise.resolve(Device.findAll({ order: [['address', 'ASC']] })\n    .then((found) => {\n      found = found.map((item) => {\n        return item.address;\n      });\n      let nextIndex = null;\n\n      // Special case when there are no previous devices registered\n      if(found.length === 0) return 1;\n\n      // Find lower unused address\n      for(let i = 0; i < found.length; i++) {\n        let current = found[i];\n        let prev = 0;\n        if(i != 0) prev = found[i - 1];\n        if(current > prev + 1) {\n          // Found discontinuity, return next value inside discontinuity\n          nextIndex = prev + 1;\n          return nextIndex;\n        }\n      }\n      // If we reached here, there is no discontinuity, return next value if available\n      nextIndex = found[found.length - 1] + 1;\n      // Forbidden addresses, 0xF0 is the bridge\n      if(nextIndex > 0xFE || nextIndex === 0xF0) return null;\n      return nextIndex;\n    }));\n  }\n\n  getNextTopicId(deviceId: number): Promise<any> {\n    return Promise.resolve(Topic.findAll({ where: { deviceId: deviceId }, order: [['mqttId', 'ASC']] })\n      .then((found) => {\n        found = found.map((item) => {\n          return item.mqttId;\n        });\n\n        let nextIndex = null;\n\n        // Special case when there are no previous topics registered\n        if(found.length === 0) return 1;\n        // Find lower unused address\n        for(let i = 0; i < found.length; i++) {\n          let current = found[i];\n          let prev = 0;\n          if(i != 0) prev = found[i - 1];\n          if(current > prev + 1) {\n            // Found discontinuity, return next value inside discontinuity\n            nextIndex = prev + 1;\n            return nextIndex;\n          }\n        }\n        // If we reached here, there is no discontinuity, return next value if available\n        nextIndex = found[found.length - 1] + 1;\n        // Max id is 0xFFFE according to MQTT-SN spec\n        if(nextIndex > 0xFFFE) throw new Error(\"Max topics reached for device\");\n        return nextIndex;\n      }));\n  }\n\n  getAllTopics(): Promise<any> {\n    return Promise.resolve(Topic.findAll());\n  }\n\n  // update or create topic\n  setTopic(deviceId: number, topic: string, topicId?: number, type?: string): Promise<any> {\n    if(type == null) type = 'normal';  // default\n\n    return Promise.resolve(\n      Topic.findOne({ where: { deviceId: deviceId, $or: [ { id: topicId }, { name: topic } ] } })\n      .then((result) => {\n        // Create if not found\n        if(!result) return this.getNextTopicId(deviceId)\n          .then((nextId: number) => {\n            return Topic.create({\n              deviceId: deviceId,\n              mqttId: nextId,\n              name: topic,\n              type: type\n            });\n          });\n\n        // else update\n        let update: any = {\n          name: topic\n        };\n        if(type != null) update.type = type;\n        return result.update(update);\n      })\n    );\n  }\n\n  // {id: }, {name: } or {mqttId: }\n  getTopic(deviceId: number, idOrName: any): Promise<any> {\n    let query: any = {\n      where: {\n        deviceId: deviceId\n      }\n    }\n\n    if(idOrName.id !== undefined) query.where.id = idOrName.id;\n    if(idOrName.mqttId !== undefined) query.where.mqttId = idOrName.mqttId;\n    if(idOrName.name !== undefined) query.where.name = idOrName.name;\n\n    return Promise.resolve(Topic.findOne(query));  \n  }\n\n  getTopicsFromDevice(deviceId: number): Promise<any> {\n    return Promise.resolve(Topic.findAll({ where: { deviceId: deviceId } }));\n  }\n\n  getAllSubscriptions(): Promise<any> {\n    // TODO When changing in Gateway, item.topic = item.topic.name, item.device = item.deviceId\n    return Promise.resolve(Subscription.findAll({ include: [ { model: Topic, as: 'topic' } ] }));\n  }\n\n  setSubscription(deviceId: number, topicName: string, qos: number): Promise<any> {\n    if(qos == null) qos = 0;\n    let results: any = {};\n    return this.getTopic(deviceId, { name: topicName })\n    .then((topic) => {\n      // If no topic, create\n      if(!topic) return this.setTopic(deviceId, topicName);\n      return topic;\n    })\n    .then((topic) => {\n      results.topic = topic;\n      return Subscription.findOne({ where: { deviceId: deviceId, topicId: topic.id } });\n    })\n    .then((subscription) => {\n      let sub = {\n        deviceId: deviceId,\n        topicId: results.topic.id,\n        qos: qos\n      };\n      // If no subscription, create\n      if(!subscription) return Subscription.create(sub);\n      // Else update\n      return subscription.update(sub);\n    });\n  }\n\n  getSubscriptionsFromTopic(topicName: string): Promise<any> {\n    return Promise.resolve(\n      Topic.findOne({ where: { name: topicName }, include: [ {\n        model: Subscription,\n        as: 'subscriptions',\n        include: [{ model: Topic, as: 'topic' }]\n      }] })\n      .then((result) => {\n        if(result == null) return [];\n        return result.subscriptions;\n      })\n    );\n  }\n\n  getSubscriptionsFromDevice(deviceId: number): Promise<any> {\n    return Promise.resolve(\n      Device.findOne({ where: { id: deviceId }, include: [ {\n        model: Subscription,\n        as: 'subscriptions',\n        include: [ { model: Topic, as: 'topic' } ]\n      }] })\n      .then((result) => {\n        if(result == null) return [];\n        return result.subscriptions;\n      })\n    );  \n  }\n\n  removeSubscriptionsFromDevice(deviceId: number): Promise<any> {\n    return Promise.resolve(\n      Subscription.destroy({ where: { deviceId: deviceId } })\n    );\n  }\n\n  removeSubscription(deviceId: number, topicName: string, topicType: string): Promise<any> {\n    return Promise.resolve(\n      Topic.findOne({ where: { name: topicName, deviceId: deviceId, type: topicType } })\n      .then((topic) => {\n        if(!topic) return false;\n        return Promise.resolve(Subscription.destroy({ where: { deviceId: deviceId, topicId: topic.id } }));\n      })\n      .then((result) => {\n        return true;\n      })\n    );\n  }\n\n  pushMessage(message: any): Promise<any> {\n    return Promise.resolve(Message.create(message));\n  }\n\n  popMessagesFromDevice(deviceId: number): Promise<any> {\n    if(deviceId == null) return Promise.resolve(false);\n\n    let result = [];\n\n    return Promise.resolve(Message.findAll({ where: { deviceId: deviceId }, include: [ { model: Topic, as: 'topic' } ] })\n    .then((messages) => {\n      result = messages;\n      return Message.destroy({ where: { deviceId: deviceId } });\n    })\n    .then(() => {\n      return result;\n    }));\n  }\n\n}\n"],"sourceRoot":"/Users/rod/workshop/aquila-gateway/src"}