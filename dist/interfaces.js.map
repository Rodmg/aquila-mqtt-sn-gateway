{"version":3,"sources":["../src/interfaces.ts"],"names":[],"mappings":"","file":"interfaces.js","sourcesContent":["import { EventEmitter } from 'events';\n\nexport interface DBInterface {\n  destructor();\n  connect(): Promise<void>;\n  setDevice(device): Promise<any>;\n  removeDevice(device: any): Promise<boolean>;\n  getDeviceByAddr(addr: number): Promise<any>;\n  getDeviceById(id: number): Promise<any>;\n  getAllDevices(): Promise<any>;\n  getNextDeviceAddress(): Promise<any>;\n  getAllTopics(): Promise<any>;\n  setTopic(deviceIdOrAddress: any, topic: string, topicId?: number, type?: string): Promise<any>;\n  getTopic(deviceIdOrAddress: any, idOrName: any): Promise<any>;\n  getTopicsFromDevice(deviceIdOrAddress: any): Promise<any>;\n  getAllSubscriptions(): Promise<any>;\n  setSubscription(deviceIdOrAddress: any, topicIdOrName: any, qos: number): Promise<any>;\n  getSubscriptionsFromTopic(topicName: string): Promise<any>;\n  getSubscriptionsFromDevice(deviceIdOrAddress: any): Promise<any>;\n  removeSubscriptionsFromDevice(deviceIdOrAddress: any): Promise<any>;\n  removeSubscription(deviceIdOrAddress: any, topicName: string, topicType: string): Promise<any>;\n  pushMessage(message: any): Promise<any>;\n  popMessagesFromDevice(deviceId: number): Promise<any>;\n}\n\nexport interface TransportInterface extends EventEmitter {\n  connect(): Promise<void>;\n  close(callback?: Function);\n  write(data: any);\n  writeNow();\n}\n"],"sourceRoot":"/Users/rod/workshop/aquila-gateway/src"}