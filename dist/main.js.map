{"version":3,"sources":["../src/main.ts"],"names":[],"mappings":";;AACA,iDAA8C;AAC9C,uDAAoD;AACpD,mDAAgD;AAChD,2CAAwC;AACxC,2CAAwC;AACxC,uCAAoC;AACpC,2CAAwC;AACxC,qCAA+B;AAC/B,qCAAqC;AACrC,6BAA8B;AAC9B,MAAM,KAAK,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAE3C,mBAAmB,CAAS;IAE1B,EAAE,CAAA,CAAC,CAAC,KAAK,OAAO,CAAC;QAAC,MAAM,CAAC,KAAK,CAAC;IAC/B,MAAM,CAAC,IAAI,CAAC;AACd,CAAC;AAED,kBAAkB,GAAW;IAE3B,IAAI,MAAM,GAAe,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACxC,EAAE,CAAA,CAAC,MAAM,CAAC,MAAM,KAAK,EAAE,CAAC,CACxB,CAAC;QACC,YAAG,CAAC,IAAI,CAAC,8DAA8D,CAAC,CAAC;QACzE,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACD,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI;QACvB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,MAAM,CAAC;AAChB,CAAC;AAED,qBAAqB,CAAS;IAE5B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC;AAED,MAAM,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC,GAAG,iBAAiB,GAAG,MAAM,CAAC,EAAE,iBAAiB,CAAC,CAAC;AAChI,MAAM,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;AAEnE,OAAO;KACJ,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC;KACtB,MAAM,CAAC,uBAAuB,EAAE,6EAA6E,EAAE,MAAM,CAAC;KACtH,MAAM,CAAC,6BAA6B,EAAE,iDAAiD,EAAE,QAAQ,CAAC;KAClG,MAAM,CAAC,0BAA0B,EAAE,qHAAqH,EAAE,yBAAyB,CAAC;KACpL,MAAM,CAAC,oBAAoB,EAAE,yCAAyC,EAAE,uBAAuB,CAAC;KAChG,MAAM,CAAC,0CAA0C,EAAE,oEAAoE,EAAE,SAAS,EAAE,IAAI,CAAC;KACzI,MAAM,CAAC,uBAAuB,EAAE,kCAAkC,EAAE,WAAW,EAAE,CAAC,CAAC;KACnF,MAAM,CAAC,2BAA2B,EAAE,+BAA+B,EAAE,QAAQ,EAAE,IAAI,CAAC;KACpF,MAAM,CAAC,wBAAwB,EAAE,6BAA6B,GAAG,iBAAiB,GAAG,GAAG,EAAE,iBAAiB,CAAC;KAC5G,MAAM,CAAC,+BAA+B,EAAE,oCAAoC,EAAE,IAAI,CAAC;KACnF,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAEvB,YAAG,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAG3B,IAAI,SAAS,CAAC;AACd,EAAE,CAAA,CAAC,OAAO,CAAC,SAAS,KAAK,KAAK,CAAC,CAC/B,CAAC;IACC,IAAI,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACrC,EAAE,CAAA,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAAC,OAAO,GAAG,IAAI,CAAC;IAClC,SAAS,GAAG,IAAI,2BAAY,CAAC,OAAO,CAAC,CAAC;AACxC,CAAC;AACD,IAAI,CAAC,EAAE,CAAA,CAAC,OAAO,CAAC,SAAS,KAAK,MAAM,CAAC,CACrC,CAAC;IACC,SAAS,GAAG,IAAI,6BAAa,CAAC,OAAO,CAAC,MAAM,EAC1C,0CAA0C,EAC1C,2CAA2C,CAAC,CAAC;AACjD,CAAC;AACD,IAAI,CACJ,CAAC;IACC,SAAS,GAAG,IAAI,iCAAe,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;AACxD,CAAC;AAED,IAAI,EAAE,GAAG,IAAI,qBAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACzC,IAAI,EAAW,CAAC;AAEhB,EAAE,CAAC,OAAO,EAAE;KACX,IAAI,CAAC;IACJ,IAAI,SAAS,GAAG,IAAI,qBAAS,CAAC,EAAE,EAAE,SAAS,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;IAC1E,EAAE,GAAG,IAAI,iBAAO,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;IAChC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAC9D,CAAC,CAAC;KACD,IAAI,CAAC;IACJ,IAAI,KAAK,GAAG,IAAI,qBAAS,CAAC,EAAE,EAAE,OAAO,CAAC,aAAa,CAAC,CAAC;IACrD,YAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["\nimport { TCPTransport } from './TCPTransport';\nimport { SerialTransport } from './SerialTransport';\nimport { MQTTTransport } from './MQTTTransport';\nimport { GatewayDB } from './GatewayDB';\nimport { Forwarder } from './Forwarder';\nimport { Gateway } from './Gateway';\nimport { GwMonitor } from './GwMonitor';\nimport { log } from './Logger';\nimport * as program from 'commander';\nimport * as path  from 'path';\nconst pjson = require('./../package.json');\n\nfunction parseBool(s: string)\n{\n  if(s === 'false') return false;\n  return true;\n}\n\nfunction parseKey(key: string)\n{\n  let keyArr: Array<any> = key.split(',');\n  if(keyArr.length !== 16)\n  {\n    log.warn(\"Invalid encryption key received, starting without encryption\");\n    return null;\n  }\n  keyArr = keyArr.map((item) => {\n    return parseInt(item);\n  });\n  return keyArr;\n}\n\nfunction parseSubnet(s: string)\n{\n  return parseInt(s);\n}\n\nconst DEFAULT_DATA_DIR = path.join(process.env[(process.platform === 'win32') ? 'ALLUSERSPROFILE' : 'HOME'], '.aquila-gateway');\nconst DEFAULT_DATA_PATH = path.join(DEFAULT_DATA_DIR, 'data.json');\n\nprogram\n  .version(pjson.version)\n  .option('-v, --verbose [level]', 'Verbosity level for logging (fatal, error, warn, info, debug, trace) [info]', 'info')\n  .option('-t, --transport [transport]', 'Forwarder transport type (serial, tcp) [serial]', 'serial')\n  .option('-p, --port [serial port]', 'Serial Port path if using serial transport, TCP port number if using TCP transport [/dev/tty.SLAB_USBtoUART | 6969]', '/dev/tty.SLAB_USBtoUART')\n  .option('-b, --broker [url]', 'MQTT broker URL [http://localhost:1883]', 'http://localhost:1883')\n  .option('-u, --allow-unknown-devices [true/false]', 'Allow connection of previously unknown (not paired) devices [true]', parseBool, true)\n  .option('-s, --subnet [pan id]', 'PAN subnet number (1 to 254) [1]', parseSubnet, 1)\n  .option('-k, --key [16 byte array]', '16 byte encryption key [null]', parseKey, null)\n  .option('-d, --data-path [path]', 'Path to data persist file [' + DEFAULT_DATA_PATH + ']', DEFAULT_DATA_PATH)\n  .option('-m, --monitor-prefix [prefix]', 'Gateway monitor topics prefix [gw]', 'gw')\n  .parse(process.argv);\n\nlog.level(program.verbose);\n\n// Select Forwarder transport\nlet transport;\nif(program.transport === 'tcp')\n{\n  let tcpPort = parseInt(program.port);\n  if(isNaN(tcpPort)) tcpPort = 6969;\n  transport = new TCPTransport(tcpPort);\n}\nelse if(program.transport === 'mqtt')\n{\n  transport = new MQTTTransport(program.broker, \n    \"91bbef0fa64c130d0b274c7299c424/bridge/in\", \n    \"91bbef0fa64c130d0b274c7299c424/bridge/out\");\n}\nelse\n{\n  transport = new SerialTransport(115200, program.port);\n}\n\nlet db = new GatewayDB(program.dataPath);\nlet gw: Gateway;\n\ndb.connect()\n.then(() => {\n  let forwarder = new Forwarder(db, transport, program.subnet, program.key);\n  gw = new Gateway(db, forwarder);\n  return gw.init(program.broker, program.allowUnknownDevices);\n})\n.then(() => {\n  let gwMon = new GwMonitor(gw, program.monitorPrefix);\n  log.info(\"Gateway Started\");\n});\n\n\n"],"sourceRoot":"/Users/rod/workshop/aquila-gateway/src"}