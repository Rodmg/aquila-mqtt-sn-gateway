{
  "_from": "graceful-fs@^4.1.2",
  "_id": "graceful-fs@4.1.3",
  "_location": "/node-pre-gyp/tar-pack/fstream/graceful-fs",
  "_nodeVersion": "4.0.0",
  "_npmOperationalInternal": {
    "host": "packages-6-west.internal.npmjs.com",
    "tmp": "tmp/graceful-fs-4.1.3.tgz_1454449326495_0.943017533281818"
  },
  "_npmUser": {
    "email": "i@izs.me",
    "name": "isaacs"
  },
  "_npmVersion": "3.7.0",
  "_phantomChildren": {},
  "_requiredBy": [
    "/node-pre-gyp/tar-pack/fstream"
  ],
  "_resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.3.tgz",
  "_shasum": "92033ce11113c41e2628d61fdfa40bc10dc0155c",
  "_shrinkwrap": null,
  "bugs": {
    "url": "https://github.com/isaacs/node-graceful-fs/issues"
  },
  "dependencies": {},
  "description": "A drop-in replacement for fs, making various improvements.",
  "devDependencies": {
    "mkdirp": "^0.5.0",
    "rimraf": "^2.2.8",
    "tap": "^5.4.2"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "92033ce11113c41e2628d61fdfa40bc10dc0155c",
    "tarball": "http://registry.npmjs.org/graceful-fs/-/graceful-fs-4.1.3.tgz"
  },
  "engines": {
    "node": ">=0.4.0"
  },
  "files": [
    "fs.js",
    "graceful-fs.js",
    "legacy-streams.js",
    "polyfills.js"
  ],
  "gitHead": "694c56f3aed4aee62d6df169be123d3984f61b85",
  "homepage": "https://github.com/isaacs/node-graceful-fs#readme",
  "keywords": [
    "fs",
    "module",
    "reading",
    "retry",
    "retries",
    "queue",
    "error",
    "errors",
    "handling",
    "EMFILE",
    "EAGAIN",
    "EINVAL",
    "EPERM",
    "EACCESS"
  ],
  "license": "ISC",
  "main": "graceful-fs.js",
  "maintainers": [
    {
      "email": "i@izs.me",
      "name": "isaacs"
    }
  ],
  "name": "graceful-fs",
  "optionalDependencies": {},
  "readme": "# graceful-fs\n\ngraceful-fs functions as a drop-in replacement for the fs module,\nmaking various improvements.\n\nThe improvements are meant to normalize behavior across different\nplatforms and environments, and to make filesystem access more\nresilient to errors.\n\n## Improvements over [fs module](http://api.nodejs.org/fs.html)\n\ngraceful-fs:\n\n* Queues up `open` and `readdir` calls, and retries them once\n  something closes if there is an EMFILE error from too many file\n  descriptors.\n* fixes `lchmod` for Node versions prior to 0.6.2.\n* implements `fs.lutimes` if possible. Otherwise it becomes a noop.\n* ignores `EINVAL` and `EPERM` errors in `chown`, `fchown` or\n  `lchown` if the user isn't root.\n* makes `lchmod` and `lchown` become noops, if not available.\n* retries reading a file if `read` results in EAGAIN error.\n\nOn Windows, it retries renaming a file for up to one second if `EACCESS`\nor `EPERM` error occurs, likely because antivirus software has locked\nthe directory.\n\n## USAGE\n\n```javascript\n// use just like fs\nvar fs = require('graceful-fs')\n\n// now go and do stuff with it...\nfs.readFileSync('some-file-or-whatever')\n```\n\n## Global Patching\n\nIf you want to patch the global fs module (or any other fs-like\nmodule) you can do this:\n\n```javascript\n// Make sure to read the caveat below.\nvar realFs = require('fs')\nvar gracefulFs = require('graceful-fs')\ngracefulFs.gracefulify(realFs)\n```\n\nThis should only ever be done at the top-level application layer, in\norder to delay on EMFILE errors from any fs-using dependencies.  You\nshould **not** do this in a library, because it can cause unexpected\ndelays in other parts of the program.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/isaacs/node-graceful-fs.git"
  },
  "scripts": {
    "test": "node test.js | tap -"
  },
  "version": "4.1.3"
}
